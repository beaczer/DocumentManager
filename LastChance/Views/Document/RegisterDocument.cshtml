@model LastChance.Models.DocumentData.Document

@{
    ViewBag.Title = "RegisterDocument";
}


@if (Session["UserId"] != null)
{
    <br />
    <div class="panel alert-info">
        <h4>Jesteś zalogowany jako @Session["UserName"].ToString()</h4>
    </div>
    <div class="collapse navbar-collapse">
        <ul class="nav navbar-nav">
            <li class="btn btn-default"><a href="@Url.Action("LogOut", "Log")">Wyloguj</a></li>
            <li class="btn btn-default"><a href="@Url.Action("RegisterDocument", "Document")">Dodaj nowy dokument</a></li>
            <li class="btn btn-default"><a href="@Url.Action("DeleteDocument", "Manage")">Wycofaj dokument</a></li>
            <li class="btn btn-default"><a href="@Url.Action("UpdateDocument", "Manage")">Aktualizuj dokument</a></li>
            <li class="btn btn-default"><a href="@Url.Action("Index", "DocBox")">Skrzynka Powiadomień</a></li>
            <li class="btn btn-default"><a href="@Url.Action("Temp", "Manage")">Przeglądarka dokumentów</a></li>
        </ul>
    </div>

    <h2>Zgłoś dokument do zatwierdzenia</h2>
    using (@Html.BeginForm("RegisterDocument", "Document", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2", @id = "desc" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LineId, "LineId", htmlAttributes: new { @class = "control-label col-md-2", @id = "line" })
            <div class="col-md-10">
                @Html.DropDownList("LineId", (SelectList)ViewData["Lines"], htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LineId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.OperationId, "OperationId", htmlAttributes: new { @class = "control-label col-md-2", @id = "nrOp" })
            <div class="col-md-10">
                @Html.DropDownList("OperationId", new SelectList(string.Empty, "Value", "Text"), "Wybierz operację", htmlAttributes: new { @class = "form-control" })
                @*@Html.DropDownList("OperationId", (SelectList)ViewData["Operation"], htmlAttributes: new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.OperationId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.AcceptedUserId, "AcceptedUserId", htmlAttributes: new { @class = "control-label col-md-2", @id = "AcceptEmpl" })
            <div class="col-md-10">
                @Html.DropDownList("AcceptedUserId", (SelectList)ViewData["AcceptedUser"], htmlAttributes: new { @class = "form -control" })
                @Html.ValidationMessageFor(model => model.AcceptedUserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DocumentTypeId, "DocumentTypeId", htmlAttributes: new { @class = "control-label col-md-2", @id = "DocType" })
            <div class="col-md-10">
                @Html.DropDownList("DocumentTypeId", (SelectList)ViewData["DocumentVariant"], htmlAttributes: new { @class = "form -control" })
                @Html.ValidationMessageFor(model => model.DocumentTypeId, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.DocumentFile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DocumentFile, new { htmlAttributes = new { @class = "form-control" } })
                
                <input type="file" name="file" class="btn btn-default" />
            </div>
            
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Zgłośc do zatwierdzenia" class="btn btn-default" />
            </div>
        </div>
    </div>
}

}
else
{
    <div>Jesteś niezalogowany! Zaloguj się</div>    
}
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script>
    $("#AcceptEmpl").text("Zatwierdzający");
</script>
<script>
    $("#desc").text("Opis");
</script>
<script>
    $("#line").text("Linia");
</script>
<script>
    $("#DocType").text("Typ dokumentu");
</script>
<script>
    $("#nrOp").text("Numer operacji");
</script>

<script src="../../Scripts/jquery-1.10.2.js" type="text/javascript"></script>
<script src="../../Scripts/jquery-1.10.2.min.js" type="text/javascript"></script>
<script type="text/javascript">

    $(document).ready(function () {
        //Dropdownlist Selectedchange event
        $("#LineId").change(function () {
            $("#OperationId").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetOperations")', // we are calling json method

                dataType: 'json',

                data: { id: $("#LineId").val() },
               // here we are get value of selected country and passing same value
                  //as inputto json method GetStates.

                success: function (listOfOperations) {
                    // states contains the JSON formatted list
                    // of states passed from the controller

                    $.each(listOfOperations, function (i, operation) {
                    $("#OperationId").append('<option value="' + operation.Value + '">' +
                         operation.Text + '</option>');
                    // here we are adding option for States

                    });
                },
                error: function (ex) {
                    alert('Nie można uzyskać operacji.' + ex);
                }
            });
            return false;
        })
    });
</script>  
@*@Html.LabelFor(model => model.BillState,
     new { @class = "control-label col-lg-2 col-md-2", @id = "lbl_billState" })
and in your script.

$("#lbl_billState").text("text here");*@